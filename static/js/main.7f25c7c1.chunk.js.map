{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Navigation/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Dashboard/DashboardTeacher.js","components/Admin/Class.js","components/Admin/Teacher.js","components/Admin/Student.js","components/Admin/index.js","components/App/index.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","user","uid","db","ref","users","student","sid","students","teacher","tid","teachers","class","cid","classes","app","initializeApp","this","database","Button","variant","onClick","HOME","AdminAuth","SignOut","as","to","ROUTES","TeacherAuth","NavigationNonAuth","authUser","useState","display","setDisplay","setUser","useEffect","callback","unsubscribe","onAuthStateChanged","once","then","snapshot","val","role","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","state","set","setState","history","push","catch","preventDefault","onChange","target","name","value","isInvalid","type","placeholder","disabled","message","SignUpLink","SignUpForm","compose","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","setStudents","setTeachers","setClasses","on","studentObject","studentList","id","teacherObj","teacherList","classList","room","amountOfStudents","Container","Row","Col","map","Card","style","width","Body","Accordion","Header","Toggle","eventKey","index","Collapse","className","setName","editing","setEditing","studentCount","setAmount","studentsAssigned","teacherAssigned","_teacher","setTeacher","saveClass","newName","document","getElementById","update","possibleStudents","obj","i","length","containsObject","label","defaultValue","height","options","e","handleTeacherSet","handleAddToClass","renderEditForm","Teacher","teacherName","edit","save","updateName","Student","studentName","componentDidMount","updateStudentName","updateTeacherName","prevState","indexOf","console","log","splice","addStudent","addTeacher","addClass","fluid","xs","listener","path","component","DashboardTeacher","DashboardAdmin","ReactDOM","render","Provider"],"mappings":"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","file":"static/js/main.7f25c7c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nexport default class Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n        this.db = app.database();\r\n    }\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    // *** User API ***\r\n\r\n    user = uid => this.db.ref(`users/${uid}`);\r\n\r\n    users = () => this.db.ref('users');\r\n\r\n    // *** Student API ***\r\n\r\n    student = sid => this.db.ref(`students/${sid}`);\r\n\r\n    students = () => this.db.ref('students');\r\n\r\n    // *** Teacher API ***\r\n\r\n    teacher = tid => this.db.ref(`teachers/${tid}`);\r\n\r\n    teachers = () => this.db.ref('teachers');\r\n\r\n    // *** Class API ***\r\n\r\n    class = cid => this.db.ref(`classes/${cid}`);\r\n\r\n    classes = () => this.db.ref('classes');\r\n\r\n}","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n    <Button variant=\"danger\" onClick={firebase.doSignOut}>\r\n        Sign Out\r\n    </Button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ADMIN = '/admin';","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../style.css';\r\nimport { withFirebase } from '../Firebase';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst Navigation = ({ authUser, firebase }) => {\r\n    const [display, setDisplay] = useState(<NavigationNonAuth />)\r\n    const [user, setUser] = useState(authUser);\r\n\r\n    const onAuthStateChanged = callback => {\r\n        return firebase.auth.onAuthStateChanged(user => {\r\n            if (user) {\r\n                callback(user)\r\n            } else {\r\n                callback(user)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(setUser);\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            firebase.user(user.uid).once('value')\r\n                .then(snapshot => {\r\n                    let userObject = snapshot.val();\r\n                    if (userObject.role === 'admin') {\r\n                        setDisplay(<AdminAuth />);\r\n                    } else {\r\n                        setDisplay(<TeacherAuth />);\r\n                    }\r\n                })\r\n        } else {\r\n            setDisplay(<NavigationNonAuth />);\r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <div>\r\n            {display}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AdminAuth = () => (\r\n    <div>\r\n        <ul>\r\n            <SignOutButton />\r\n            <li>\r\n                <Link as={Button} to={ROUTES.HOME}>View Only</Link>\r\n            </li>\r\n            <li>\r\n                <Link as={Button} to={ROUTES.ADMIN}>Admin View</Link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nconst TeacherAuth = () => (\r\n    <div>\r\n        <ul>\r\n            <SignOutButton />\r\n            <li>\r\n                <Link to={ROUTES.HOME}>Home!</Link>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n    <ul>\r\n        <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </ul>\r\n);\r\n\r\nexport default withFirebase(Navigation);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n \r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n \r\nconst SignUpPage = () => (\r\n    <div>\r\n        <h1>SignUp</h1>\r\n        <SignUpForm />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n  };\r\n \r\n  class SignUpFormBase extends Component {\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n \r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n            role: 'teacher'\r\n          });\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n \r\n    event.preventDefault();\r\n  }\r\n \r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n \r\n  render() {\r\n    const {\r\n        username,\r\n        email,\r\n        passwordOne,\r\n        passwordTwo,\r\n        error,\r\n      } = this.state;\r\n\r\n      const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n         <input\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n        />\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n \r\nconst SignUpLink = () => (\r\n  <p>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(SignUpFormBase);\r\n   \r\nexport default SignUpPage;\r\n \r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignInPage = () => (\r\n    <div>\r\n        <h1>SignIn</h1>\r\n        <SignInForm />\r\n        <SignUpLink />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email, password } = this.state;\r\n\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const { email, password, error } = this.state;\r\n\r\n        const isInvalid = password === '' || email === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Sign In\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignInForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };\r\n","import React, { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst DashboardTeacher = props => {\r\n    const [students, setStudents] = useState([])\r\n    const [teachers, setTeachers] = useState([])\r\n    const [classes, setClasses] = useState([])\r\n\r\n    useEffect(() => {\r\n        props.firebase.students().on('value', snapshot => {\r\n            const studentObject = snapshot.val();\r\n            let studentList = [];\r\n            for (let student in studentObject) {\r\n                studentList.push({\r\n                    id: student,\r\n                    name: studentObject[student].name\r\n                })\r\n            }\r\n            setStudents(studentList);\r\n        })\r\n        props.firebase.teachers().on('value', snapshot => {\r\n            const teacherObj = snapshot.val();\r\n            let teacherList = [];\r\n            for (let teacher in teacherObj) {\r\n                teacherList.push({\r\n                    id: teacher,\r\n                    name: teacherObj[teacher].name\r\n                })\r\n            }\r\n            setTeachers(teacherList);\r\n        })\r\n        props.firebase.classes().on('value', snapshot => {\r\n            const classes = snapshot.val();\r\n            let classList = [];\r\n            for (let room in classes) {\r\n                classList.push({\r\n                    id: room,\r\n                    name: classes[room].name,\r\n                    amountOfStudents: classes[room].amountOfStudents,\r\n                    students: (classes[room].students ? classes[room].students : []),\r\n                    teacher: classes[room].teacher\r\n                })\r\n            }\r\n            setClasses(classList);\r\n        })\r\n    }, [props.firebase]);\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    {students.map(student => {\r\n                        return (\r\n                            <Card style={{ width: '10rem' }}>\r\n                                <Card.Body>\r\n                                    Student: {student.name}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </Col>\r\n                <Col>\r\n                    {teachers.map(teacher => {\r\n                        return (\r\n                            <Card style={{ width: '10rem' }}>\r\n                                <Card.Body>\r\n                                    Teacher: {teacher.name}\r\n                                </Card.Body>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </Col>\r\n                <Col >\r\n                    {classes.map(room => {\r\n                        return (\r\n                            <Card>\r\n                                <Accordion>\r\n                                    <Card.Header>\r\n                                        <Accordion.Toggle as={Button} variant='link' eventKey={room.index}>\r\n                                            {room.name} with {room.amountOfStudents} total students, the teacher is {room.teacher.name}.\r\n                                </Accordion.Toggle>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={room.index}>\r\n                                        <Card.Body>\r\n                                            {room.students.map(student => <Col>{student.name}</Col>)}\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Accordion>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\nexport default withFirebase(DashboardTeacher);","import React, { useEffect, useState } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { withFirebase } from '../Firebase';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Select from 'react-select';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Class = (props) => {\r\n    const [className, setName] = useState(props.name);\r\n    const [editing, setEditing] = useState(false);\r\n    const [studentCount, setAmount] = useState(props.studentCount);\r\n    const [studentsAssigned, setStudents] = useState((props.studentsAssigned ? props.studentsAssigned : []));\r\n    const [_teacher, setTeacher] = useState(props.teacherAssigned);\r\n    const [id] = useState(props.id);\r\n\r\n    useEffect(() => {\r\n        props.firebase.classes().on('value', snapshot => {\r\n            let classes = snapshot.val();\r\n            for (let room in classes) {\r\n                if (room === id) {\r\n                    setTeacher(classes[room].teacher);\r\n                    setStudents(classes[room].students ? classes[room].students : []);\r\n                    setAmount(classes[room].amountOfStudents);\r\n                }\r\n            }\r\n        })\r\n    }, [editing])\r\n\r\n    const edit = () => setEditing(true);\r\n\r\n    const saveClass = () => {\r\n        let newName = document.getElementById('roomName').value;\r\n        props.firebase.class(id)\r\n            .update({\r\n                name: newName,\r\n            })\r\n        return setName(newName);\r\n    }\r\n\r\n    const save = () => {\r\n        setEditing(false);\r\n        saveClass();\r\n    }\r\n\r\n    const handleTeacherSet = (e) => {\r\n        let tid = e.value;\r\n        if (tid === 0)\r\n            return;\r\n\r\n        props.teachers.map(teacher => {\r\n            if (teacher.id === tid) {\r\n                setTeacher(teacher);\r\n                props.firebase.class(id)\r\n                    .update({ teacher: { id: teacher.id, name: teacher.name } })\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleAddToClass = (e) => {\r\n        let sid = e.value;\r\n        if (sid === 0)\r\n            return;\r\n\r\n        props.students.map(student => {\r\n            if (student.id === sid) {\r\n                setStudents([...studentsAssigned, student]);\r\n                setAmount(studentCount + 1);\r\n                props.firebase.class(id)\r\n                    .update({\r\n                        students: [...studentsAssigned, student],\r\n                        amountOfStudents: studentCount + 1\r\n                    })\r\n            }\r\n        })\r\n    }\r\n    const containsObject = obj => {\r\n        var i;\r\n        for (i = 0; i < studentsAssigned.length; i++) {\r\n            if (studentsAssigned[i].id === obj.id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const renderEditForm = () => {\r\n        let possibleStudents = []\r\n        let teachers = []\r\n        props.students.map(student => {\r\n            if (!containsObject(student)) {\r\n                possibleStudents.push({ value: student.id, label: student.name });\r\n            }\r\n        })\r\n        props.teachers.map(teacher => {\r\n            teachers.push({ value: teacher.id, label: teacher.name });\r\n        })\r\n\r\n        return (\r\n            <Card>\r\n                <Accordion>\r\n                    <Card.Header>\r\n                        Change class name:\r\n                        <textarea defaultValue={className} className=\"note__textarea\" onChange={() => saveClass()} id='roomName' style={{ height: '25px', }} />\r\n                        <Accordion.Toggle as={Button} variant='link' eventKey={id}>\r\n                            with {studentCount} total students, the teacher is {_teacher.name}.\r\n                        </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={id}>\r\n                        <Card.Body>\r\n                            <Select options={teachers} onChange={event => handleTeacherSet(event)} placeholder='Select a teacher to set' value={0} />\r\n                            {studentsAssigned.map(student => <Col>{student.name}</Col>)}\r\n                            <Select options={possibleStudents} onChange={(event) => handleAddToClass(event)} placeholder='Select a student to add' value={0} />\r\n                            <Button variant='dark' onClick={() => save()} >Save Class!</Button>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Accordion>\r\n            </Card >\r\n        );\r\n    }\r\n\r\n    const renderNormalForm = () => {\r\n        return (\r\n            <Card>\r\n                <Accordion>\r\n                    <Card.Header>\r\n                        <Accordion.Toggle as={Button} variant='link' eventKey={id}>\r\n                            {className} with {studentCount} total students, the teacher is {_teacher.name}.\r\n                    </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={id}>\r\n                        <Card.Body>\r\n                            {studentsAssigned.map(student => <Col>{student.name}</Col>)}\r\n                            <Button variant='warning' onClick={() => edit()} >Edit Class!</Button>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Accordion>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {editing ? renderEditForm() : renderNormalForm()}\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default withFirebase(Class);","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Teacher(props) {\r\n    const [id, setID] = React.useState(props.id);\r\n    const [teacherName, setName] = React.useState(props.name);\r\n    const [editing, setEditing] = React.useState(false);\r\n\r\n    const edit = () => {\r\n        if (editing)\r\n            save();\r\n        setEditing(!editing);\r\n\r\n    }\r\n\r\n    const save = () => {\r\n        let newName = document.getElementById('teacher').value;\r\n        setName(newName)\r\n        props.updateName(newName, id);\r\n    }\r\n\r\n    const renderForm = () => {\r\n        const content = (\r\n            <div>\r\n                <textarea defaultValue={teacherName} className=\"note__textarea\" id='teacher' style={{ width: '100px' }} />\r\n                <Button className=\"note__save\" variant='dark' onClick={() => edit()}> Save </Button>\r\n            </div>\r\n        );\r\n        return content;\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={{ width: '25rem' }}>\r\n            <Card.Body>\r\n                <Row>\r\n                    {editing ? renderForm() : teacherName}\r\n                </Row>\r\n                <Row className='text-center'>\r\n                    {editing ? \"\" : <Button variant='warning' onClick={() => edit()}> Edit Teacher</Button>}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    );\r\n}\r\nexport default Teacher;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction Student(props) {\r\n    const [id, setID] = React.useState(props.id);\r\n    const [studentName, setName] = React.useState(props.name);\r\n    const [editing, setEditing] = React.useState(false);\r\n\r\n    const edit = () => {\r\n        if (editing)\r\n            save();\r\n        setEditing(!editing);\r\n\r\n    }\r\n\r\n    const save = () => {\r\n        let newName = document.getElementById('textarea').value;\r\n        setName(newName)\r\n        props.updateName(newName, id);\r\n    }\r\n\r\n    const renderForm = () => {\r\n        const content = (\r\n            <div>\r\n                <textarea defaultValue={studentName} className=\"note__textarea\" id='textarea' style={{ width: '100px' }} />\r\n                <Button className=\"note__save\" variant='dark' onClick={() => edit()}> Save </Button>\r\n            </div>\r\n        );\r\n        return content;\r\n    }\r\n\r\n    return (\r\n\r\n        <Card style={{ width: '25rem' }}>\r\n            <Card.Body>\r\n                <Row>\r\n                    {editing ? renderForm() : studentName}\r\n                </Row>\r\n                <Row>\r\n                    {editing ? \"\" : <Button variant='warning' onClick={() => edit()} > Edit Student</Button>}\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    );\r\n}\r\nexport default Student;","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withFirebase } from '../Firebase';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Class from './Class';\r\nimport Teacher from './Teacher';\r\nimport Student from './Student';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nclass DashboardAdmin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            students: [],\r\n            classes: [],\r\n            teachers: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.firebase.students().on('value', snapshot => {\r\n            const studentObject = snapshot.val();\r\n            let studentList = [];\r\n            for (let student in studentObject) {\r\n                studentList.push({\r\n                    id: student,\r\n                    name: studentObject[student].name\r\n                })\r\n            }\r\n            this.setState({ students: studentList });\r\n        })\r\n        this.props.firebase.teachers().on('value', snapshot => {\r\n            const teacherObj = snapshot.val();\r\n            let teacherList = [];\r\n            for (let teacher in teacherObj) {\r\n                teacherList.push({\r\n                    id: teacher,\r\n                    name: teacherObj[teacher].name\r\n                })\r\n            }\r\n            this.setState({ teachers: teacherList });\r\n        })\r\n        this.props.firebase.classes().on('value', snapshot => {\r\n            const classes = snapshot.val();\r\n            let classList = [];\r\n            for (let room in classes) {\r\n                classList.push({\r\n                    id: room,\r\n                    name: classes[room].name,\r\n                    amountOfStudents: classes[room].amountOfStudents,\r\n                    students: (classes[room].students ? classes[room].students : []),\r\n                    teacher: classes[room].teacher\r\n                })\r\n            }\r\n            this.setState({ classes: classList });\r\n        })\r\n    }\r\n\r\n    updateStudentName = (newName, id) => {\r\n        const { students } = this.state;\r\n        students.map(student => {\r\n            if (student.id === id) {\r\n                student.name = newName;\r\n                this.props.firebase.student(student.id)\r\n                    .update({ name: newName });\r\n                this.state.classes.map(room => {\r\n                    room.students.map(student => {\r\n                        if (student.id === id) {\r\n                            student.name = newName\r\n                        }\r\n                    })\r\n                    this.props.firebase.class(room.id)\r\n                        .update({ students: room.students })\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    updateTeacherName = (newName, id) => {\r\n        const { teachers } = this.state;\r\n        teachers.map(teacher => {\r\n            if (teacher.id === id) {\r\n                teacher.name = newName;\r\n                this.props.firebase.teacher(teacher.id)\r\n                    .update({ name: newName, id: teacher.id })\r\n                this.state.classes.map(room => {\r\n                    if (teacher.id === room.teacher.id) {\r\n                        this.setState(prevState => {\r\n                            let index = prevState.classes.indexOf(room);\r\n                            let update = prevState.classes[index];\r\n                            console.log(update);\r\n                            update.name = newName;\r\n                            console.log(update);\r\n                            prevState.classes.splice(index, 1);\r\n                            return { classes: [...prevState.classes, update] };\r\n                        });\r\n                        this.props.firebase.class(room.id)\r\n                            .update({ teacher: { name: newName, id: teacher.id } })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    addStudent = () => {\r\n        this.props.firebase.students().push({ name: 'Student' });\r\n    }\r\n\r\n    addTeacher = () => {\r\n        this.props.firebase.teachers().push({ name: 'Teacher' });\r\n    }\r\n\r\n    addClass = () => {\r\n        this.props.firebase.classes().push({ name: 'Class', teacher: { name: \"NOT SET YET\", id: ' ' }, amountOfStudents: 0, students: [] })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col className='text-center'>\r\n                        <Button variant='primary' onClick={() => this.addStudent()}>New Student</Button>\r\n                        {this.state.students.map(student => <Student id={student.id} name={student.name} updateName={this.updateStudentName} />)}\r\n                    </Col>\r\n                    <Col className='text-center'>\r\n                        <Button variant='primary' onClick={() => this.addTeacher()}>New Teacher</Button>\r\n                        {this.state.teachers.map(teacher => <Teacher id={teacher.id} name={teacher.name} updateName={this.updateTeacherName} />)}\r\n                    </Col>\r\n                    <Col xs={5}>\r\n                        <Button variant='primary' onClick={() => this.addClass()}>New Class</Button>\r\n                        {this.state.classes.map(room => <Class teachers={this.state.teachers} students={this.state.students}\r\n                            name={room.name} studentsAssigned={room.students} teacherAssigned={room.teacher} id={room.id} studentCount={room.amountOfStudents}\r\n                            firebase={this.props.firebase} />)}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(DashboardAdmin);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport DashboardTeacher from '../Dashboard/DashboardTeacher';\r\nimport DashboardAdmin from '../Admin';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authUser: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n            authUser => {\r\n                authUser\r\n                    ? this.setState({ authUser })\r\n                    : this.setState({ authUser: null });\r\n            },\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.listener();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Router>\r\n                <div>\r\n                    <Navigation authUser={this.state.authUser} />\r\n\r\n                    <hr />\r\n                    <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n                    <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n                    <Route path={ROUTES.HOME} component={DashboardTeacher} />\r\n                    <Route path={ROUTES.ADMIN} component={DashboardAdmin} />\r\n\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withFirebase(App);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <App />\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById(\"root\"));"],"sourceRoot":""}